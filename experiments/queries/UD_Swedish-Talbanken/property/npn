MATCH (N1:Word)
MATCH (N2:Word)
MATCH (P:Word)
MATCH (N1 {upos: 'NOUN'})
MATCH (P {upos: 'ADP'})
MATCH (N2 {upos: 'NOUN'})
MATCH (N1)-[:SUCCESSOR]->(P)
MATCH (P)-[:SUCCESSOR]->(N2)
WHERE N1.lemma = N2.lemma
AND NOT EXISTS {
    MATCH (X:Word)
    MATCH (N1)-[:DEPREL {deprel: 'case'}]->(X)
    MATCH (X)-[:SUCCESSOR]->*(N1)
}
AND NOT EXISTS {
    MATCH (X:Word)
    MATCH (X)-[:DEPREL {deprel: 'fixed'}]->(N1)
}
RETURN N1, N2, P